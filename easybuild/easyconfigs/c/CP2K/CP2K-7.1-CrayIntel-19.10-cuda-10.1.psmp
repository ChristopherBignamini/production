# contributed by Luca Marsella (CSCS)
# modules: Bison CrayIntel cray-fftw cudatoolkit ELPA flex Libint libxc libxsmm
GPUVER    = P100
NVCC      = nvcc
CC        = cc
FC        = ftn
LD        = ftn
AR        = ar -r
DFLAGS    = -D__ACC -D__DBCSR_ACC -D__MKL -D__FFTW3 -D__ELPA=201911 -D__LIBINT -D__LIBXC -D__LIBXSMM -D__MAX_CONTR=4 -D__parallel -D__SCALAPACK
CFLAGS    = $(DFLAGS) -g -O2 
FCFLAGS   = $(DFLAGS) -g -O2 -qopenmp -funroll-loops -fp-model precise -fpp -free -traceback
FCFLAGS   += -I$(MKLROOT)/include -I$(FFTW_INC)
FCFLAGS   += -I$(ELPA_INCLUDE_DIR)/elpa -I$(ELPA_INCLUDE_DIR)/modules 
FCFLAGS   += -I$(EBROOTLIBINTMINCP2K)/include 
FCFLAGS   += -I$(EBROOTLIBXC)/include 
FCFLAGS   += -I$(EBROOTLIBXSMM)/include
LDFLAGS  = $(FCFLAGS)
LDFLAGS_C = $(FCFLAGS) -nofor_main
NVFLAGS  = $(DFLAGS) -O3 -arch sm_60
LIBS   	 = -lfftw3 -lfftw3_threads -lcudart -lcublas -lcufft -lrt -lnvrtc
LIBS      += -L$(MKLROOT)/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lstdc++ -ldl
LIBS      += -L$(EBROOTELPA)/lib -lelpa_openmp
LIBS      += -L$(EBROOTLIBINTMINCP2K)/lib -lint2 -lstdc++
LIBS      += -L$(EBROOTLIBXC)/lib -lxcf03 -lxc
LIBS      += -L$(EBROOTLIBXSMM)/lib -lxsmmf -lxsmm -ldl

# Required due to memory leak that occurs if high optimisations are used
mp2_optimize_ri_basis.o: mp2_optimize_ri_basis.F
			 $(FC) -c $(subst O2,O0,$(FCFLAGS)) $<
